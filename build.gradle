plugins {
    id 'java-library'
    id "com.jfrog.bintray" version "1.8.4" 
}
 
apply plugin: 'maven-publish'
apply from: "gradle/versioning.gradle"

repositories {
    jcenter()
    maven { url "http://jars.interlis.ch/" }
}

dependencies {
    api 'ch.interlis:ili2c-tool:5.0.0' 

    api 'commons-io:commons-io:2.6'
    api 'org.slf4j:slf4j-api:1.7.26'
    api 'ch.qos.logback:logback-classic:1.2.3'
        
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.4.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.4.0'
    testImplementation 'ch.interlis:ilivalidator:1.11.0'    
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

group = 'ch.so.agi.av'


test {
    testLogging.showStandardStreams = true
    testLogging.exceptionFormat = 'full'
    useJUnitPlatform {}
    failFast = true
}

// Bintray / jcenter
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

javadoc.failOnError = false
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

def githubRepoUrl = "https://github.com/sogis/av2ch"
def pomConfig = {
    licenses {
        license {
            name "MIT License"
            url "https://github.com/sogis/av2ch/blob/master/LICENSE"
        }
    }
    developers {
        developer {
            id "edigonzales"
            name "Stefan Ziegler"
            email "stefan.ziegler@bd.so.ch"
        }
    }

    scm {
        url githubRepoUrl
    }
}

publishing {
    publications {
        mavenPublication(MavenPublication) {
            from components.java
            artifact sourcesJar {
                classifier "sources"
            }
            artifact javadocJar {
                classifier "javadoc"
            }
            groupId project.group
            artifactId 'av2ch'
            version project.version
            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'A library that converts a cadastral INTERLIS dataset (itf) from the cantonal model to the federal model.')
                root.appendNode('name', 'av2ch')
                root.appendNode('url', githubRepoUrl)
                root.children().last() + pomConfig
            }
        }
    }
}

bintray {
    user = System.env.bintrayUser
    key = System.env.bintrayKey
    publications = ['mavenPublication']
    publish = true
    
    pkg {
        repo = 'av2ch'
        name = 'av2ch'
        userOrg = 'sogis'
        licenses = ['MIT']
        labels = ['DM01', 'interlis', 'itf']        
        vcsUrl = githubRepoUrl
        version {
            name = project.version
            desc = project.version
            released  = new Date()
        }
    }
}

